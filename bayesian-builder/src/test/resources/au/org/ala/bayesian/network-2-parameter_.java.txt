package au.org.ala.bayesian.generated;

import au.org.ala.bayesian.InferenceException;
import au.org.ala.bayesian.ParameterAnalyser;
import au.org.ala.bayesian.Parameters;

public class Network2Parameters_ implements Parameters {

  public final static String SIGNATURE = "";

  public double prior_v1_t; // v_1 prior probability
  public double prior_v1_f; // 1 - v_1 prior probability
  public double inf_v2_t$t; // p(v_2 | v_1) conditional probability
  public double inf_v2_f$t; // p(¬v_2 | v_1) =  1 - p(v_2 | v_1) conditional probability
  public double inf_v2_t$f; // p(v_2 | ¬v_1) conditional probability
  public double inf_v2_f$f; // p(¬v_2 | ¬v_1) =  1 - p(v_2 | ¬v_1) conditional probability

  public Network2Parameters_() {
  }

  @Override
  public void load(double[] vector) {
    this.prior_v1_t = vector[0];
    this.inf_v2_t$t = vector[1];
    this.inf_v2_t$f = vector[2];
    this.build();
  }

  @Override
  public double[] store() {
    double[] vector = new double[3];

    vector[0] = this.prior_v1_t;
    vector[1] = this.inf_v2_t$t;
    vector[2] = this.inf_v2_t$f;
    return vector;
  }

  public void build() {
    this.prior_v1_f = 1.0 - this.prior_v1_t;
    this.inf_v2_f$t = 1.0 - this.inf_v2_t$t;
    this.inf_v2_f$f = 1.0 - this.inf_v2_t$f;
  }

}