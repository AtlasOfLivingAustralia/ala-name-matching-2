package au.org.ala.bayesian.generated;

public class Network2Inference {
  public Network1Parameters parameters;

  public double infer(Evidence evidence, double c$v1) {
    double nc$v1 = 1.0 - c$v1;
    double c$v2 = 0;
    double nc$v2 = 0;
    if (evidence.e$v2 == null || evidence.e$v2) {
      c$v2 += this.parameters.inf_t_t$v2 * c$v1;
      c$v2 += this.parameters.inf_t_f$v2 * nc$v1;
    }
    if (evidence.e$v2 == null || !evidence.e$v2) {
      nc$v2 += this.parameters.inf_f_t$v2 * c$v1;
      nc$v2 += this.parameters.inf_f_f$v2 * nc$v1;
    }
    return (c$v2 + nc$v2) * (this.parameters.prior_t$v1 * c$v1 + this.parameters.prior_f$v1 * nc$v1);
  }

  public double probability(Evidence evidence) {
    double p;
    double ph = 0.0;
    double pe = 0.0;

    p = evidence.isT$v_1() * this.infer(evidence, 1.0);
    ph += p;
    pe += p;
    p = evidence.isF$v_1() * this.infer(evidence, 0.0);
    pe += p;
    return pe == 0.0 ? 0.0 : ph / pe;
  }

  public static class Evidence {
    public Boolean e$v1;
    public Boolean e$v2;

    public double isT$v_1() {
      return this.e$v1 == null || this.e$v1 ? 1.0 : 0.0;
    }

    public double isF$v_1() {
      return this.e$v1 == null || !this.e$v1 ? 1.0 : 0.0;
    }

    public double isT$v_2() {
      return this.e$v2 == null || this.e$v2 ? 1.0 : 0.0;
    }

    public double isF$v_2() {
      return this.e$v2 == null || !this.e$v2 ? 1.0 : 0.0;
    }

  }
}